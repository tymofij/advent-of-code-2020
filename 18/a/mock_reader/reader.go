// Code generated by MockGen. DO NOT EDIT.
// Source: ./reader/types.go

// Package mock_reader is a generated GoMock package.
package mock_reader

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLineReader is a mock of LineReader interface.
type MockLineReader struct {
	ctrl     *gomock.Controller
	recorder *MockLineReaderMockRecorder
}

// MockLineReaderMockRecorder is the mock recorder for MockLineReader.
type MockLineReaderMockRecorder struct {
	mock *MockLineReader
}

// NewMockLineReader creates a new mock instance.
func NewMockLineReader(ctrl *gomock.Controller) *MockLineReader {
	mock := &MockLineReader{ctrl: ctrl}
	mock.recorder = &MockLineReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLineReader) EXPECT() *MockLineReaderMockRecorder {
	return m.recorder
}

// ReadLines mocks base method.
func (m *MockLineReader) ReadLines() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadLines")
	ret0, _ := ret[0].([]string)
	return ret0
}

// ReadLines indicates an expected call of ReadLines.
func (mr *MockLineReaderMockRecorder) ReadLines() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadLines", reflect.TypeOf((*MockLineReader)(nil).ReadLines))
}
